#!/usr/bin/python3
"""Unittest for max_integer([...])
"""
import unittest
max_integer = __import__('6-max_integer').max_integer

class TestMaxInteger(unittest.TestCase):
    def test_empty_list(self):
        self.assertEqual(max_integer([]), None)

    def test_positive_integers(self):
        self.assertEqual(max_integer([1, 2, 3, 4]), 4)

    def test_negative_integers(self):
        self.assertEqual(max_integer([-1, -2, -3, -4]), -1)

    def test_mixed_integers(self):
        self.assertEqual(max_integer([-1, 2, -3, 4]), 4)

    def test_floats(self):
        self.assertEqual(max_integer([1.1, 2.2, 3.3, 4.4]), 4.4)

    def test_mixed_numbers(self):
        self.assertEqual(max_integer([1, -2.2, 3, -4.4]), 3)

    def test_single_number(self):
        self.assertEqual(max_integer([5]), 5)

    def test_duplicate_numbers(self):
        self.assertEqual(max_integer([3, 3, 3, 3]), 3)

    def test_string_in_list(self):
        with self.assertRaises(TypeError):
            max_integer([1, 2, "three", 4])

    def test_empty_string_in_list(self):
        with self.assertRaises(TypeError):
            max_integer([1, 2, "", 4])

    def test_list_in_list(self):
        with self.assertRaises(TypeError):
            max_integer([1, 2, [3, 4], 5])

if __name__ == '__main__':
    unittest.main()
